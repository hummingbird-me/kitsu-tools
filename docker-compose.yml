version: "3.8"

volumes:
  postgres:
    driver: local
  node_modules:
    driver: local
  uploads:
    driver: local
  typesense:
    driver: local

services:
  # Databases
  postgres:
    image: postgres:11
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: kitsu_development
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres:/var/lib/postgresql/data
    ports: [5432]
  redis:
    image: redis
  elasticsearch:
    platform: linux/x86_64
    image: elasticsearch:2
  typesense:
    image: typesense/typesense:0.25.1
    environment:
      TYPESENSE_DATA_DIR: /data
      TYPESENSE_API_KEY: xyz
    volumes:
      - typesense:/data

  # Pretend cloud services
  mailcatcher:
    image: schickling/mailcatcher
  minio:
    image: minio/minio:latest
    command: [server, "/data"]
    volumes:
      - uploads:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_DEFAULT_BUCKETS=kitsu-ugc-dev


  # Web server, routing /api and / to server, client respectively
  router:
    build: ./router
    depends_on: [web, api, minio, mailcatcher]
    volumes:
      - uploads:/srv/www/uploads/system
    ports: ["42069:80"]

  # Application
  api: &rails
    depends_on: [postgres, redis, elasticsearch, typesense, mailcatcher, minio]
    build:
      context: ./server
      dockerfile: Dockerfile.local
    volumes:
      - ./server:/opt/kitsu/server
      - uploads:/opt/kitsu/server/public/system
      # Cache bundle
      - /usr/local/bundle
    environment:
      DATABASE_URL: "postgresql://kitsu_development@postgres/"
      ELASTICSEARCH_URL: "elasticsearch:9200"
      REDIS_URL: "redis://redis/1"
      RAILS_ENV: development
      SMTP_ADDRESS: "mailcatcher"
      SMTP_PORT: "1025"
      AWS_ENDPOINT: "http://minio:9000/"
      AWS_BUCKET: kitsu-ugc-dev
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      TYPESENSUAL_API_KEY: xyz
      TYPESENSUAL_NODES: http://typesense:8108/
  worker:
    <<: *rails
    command: [sidekiq]
  web:
    build: ./client
    volumes:
      - ./client:/opt/kitsu/client
    tmpfs:
      - /opt/kitsu/client/tmp
    environment:
      EMBER_ENV: development
